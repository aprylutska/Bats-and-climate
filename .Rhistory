# Data must contain one row per day and the variable with the positive daily mean temperature.
# If mean temperature is negative, put zero in this variable.
# Also the variable with the full date MUST be character AND named "date"
gdu <- function(daily_data_for_one_year,
var_with_PositiveMeanTemp) {
GDU <- list() # prepare empty list
# looping through the daily data within the year
for (i in 1:nrow(daily_data_for_one_year)) {
GDU[[i]] <- c(daily_data_for_one_year$date[i],
sum(daily_data_for_one_year[1:i, var_with_PositiveMeanTemp])
)
}
# reshape obtained list
GDU <- as.data.frame(GDU)
GDU <- as.data.frame(t(GDU))
colnames(GDU) <- c("date", "GDU")
# retrieve the result
return(GDU)
}
# Read data and prepare it for further analyses
df <- read.csv("Homolsha_all_years.csv") # read data from *.csv file
# Set variables classes
df$date <- as.Date(df$Data, "%d.%m.%Y") # convert date to R Data format
df$Place <- as.factor(df$Place)
df$Species <- as.factor(df$Species)
df$sex <- as.factor(df$sex)
df$age <- as.factor(df$age)
df$Year <- year(df$date) #виокремлення року
df$Year <-as.factor (df$Year)
#створення нової колонки з даними про день від початку року
df$day <- yday(df$date)
df$Ra <- sub(",", ".", df$Ra) #заміна ком на крапки в промірах передпліччя
df$W <- sub(",", ".", df$W)
df$Ra <-as.numeric (df$Ra) #присвоєння промірам нумеричного типу даних
df$W <-as.numeric (df$W)
# Delete unused variables
df$Data <- NULL
df$reproductive.status <- NULL
# Drop rows with NAs in W and Ra
df <- df[!is.na(df$W) & !is.na(df$Ra),]
# Loaded packages with their versions
sessionInfo() # to check your locale
summary(df)
table (df$Species,df$age)
# Subset only some species (e.g., N.noc. , M.daubentonii)
df <- subset(df,
Species %in% c('Nyctalus noctula'
#,'Myotis daubentonii'
) &
age == "sad"
)
summary (df)
df <- df |>
# count bats per day
count(date) |>
# choose days where more than 10 bats
filter(n > 10) |>
# subset with days where more than 10 bats
inner_join(df)
ggplot(data = df, aes(Ra, W
, colour = Year
)
) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(x = "Forearm length, mm",
y = "Weight, g")
ggplot(data = df, aes(sex, Ra)) +
geom_violin() +
labs(title = "Forearm length",
y = "Forearm length, mm")
ggplot(data = df, aes(sex, W)) +
geom_violin() +
labs(title = "Weight",
y = "Weight, g")
ggplot(data = df, aes(Year, Ra)) +
geom_violin() +
labs(title = "Forearm length",
y = "Ra, mm")
ggplot(data = df, aes(Year, W)) +
geom_violin() +
labs(title = "Weight",
y = "W, g")
# t ~ Ra
p_Ra_day_4years <- ggplot(data = df, aes(x = day, y = Ra, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "Ra ~ DOY",
y = "Forearm length, mm")
# t ~ W
p_W_day_4years <- ggplot(data = df, aes(x = day, y = W, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "W ~ DOY",
y = "Weight, g")
p_Ra_day_4years
p_W_day_4years
rm(p_Ra_day_4years, p_W_day_4years)
ggplot(df, aes(day)) +
geom_histogram() +
labs(x = "Day of the year",
y = "Number of bats") +
facet_wrap(vars(Year))
# Fit simple linear model
mod <- lm(log(W) ~ log(day), data = df)
# Get residuals
df$BCI <- residuals(mod)
# Drop unused variables
rm(mod)
check_my_var(df, "Ra", "day")
check_my_var(df, "W", "day")
check_my_var(df, "BCI", "day")
ggplot(data = df, aes(Year, BCI)) +
geom_violin() +
labs(y = "Body Condition Index")
ggplot(data = df, aes(day, BCI, colour = Year)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(x = "Day of the year",
y = "Body Condition Index")
# facet_wrap(vars(sex))
# Drop 2014 due to the lack of successful nights
df <- df[df$Year != "2014", ]
# # Check for normality
# # if p value > 0.05 - accept Null Hypothesis, otherwise reject it
#
# # Assess normality for each year separately
# shapiro.test(df$Ra[df$Year == "2008"])
# shapiro.test(df$Ra[df$Year == "2011"])
# shapiro.test(df$Ra[df$Year == "2019"])
#
#
# shapiro.test(df$BCI[df$Year == "2008"])
# shapiro.test(df$BCI[df$Year == "2011"])
# shapiro.test(df$BCI[df$Year == "2019"])
# Bartlett test of homogeneity of variances
# If p > 0.05, accept Null Hypothesis (variance are homogeneous)
# Ra
barlett_Ra <- bartlett.test(Ra ~ Year, df)
# BCI
barlett_BCI <- bartlett.test(BCI ~ Year, df)
ggplot(data = df, aes(x = Ra)) +
geom_histogram() +
labs(title = paste0("Bartlett test of homogeneity of variances: p-value = ",
round(barlett_Ra$p.value, digits = 3)),
x = "Foreadrm length, mm",
y = "Frequency") +
facet_wrap(vars(Year))
ggplot(data = df, aes(x = BCI)) +
geom_histogram() +
labs(title = paste0("Bartlett test of homogeneity of variances: p-value = ",
round(barlett_BCI$p.value, digits = 3)),
x = "Body Condition Index",
y = "Frequency") +
facet_wrap(vars(Year))
p1 <- ggplot(data = df, aes(sex, Ra)) +
geom_violin() +
labs(title = "Forearm length",
y = "Forearm length, mm")
p2 <- ggplot(data = df, aes(sex, W)) +
geom_violin() +
labs(title = "Weight",
y = "Weight, g")
library(patchwork)
p1 + p2
p1 <- ggplot(data = df, aes(sex, Ra)) +
geom_violin() +
labs(title = "Forearm length",
y = "Forearm length, mm")
p2 <- ggplot(data = df, aes(sex, W)) +
geom_violin() +
labs(title = "Weight",
y = "Weight, g")
# One row, two columns
par(mfrow = c(1, 2))
p1
p2
# Back to the original graphics device
par(mfrow = c(1, 1))
# One row, two columns
par(mfrow = c(1, 2))
p1
p2
# Back to the original graphics device
par(mfrow = c(1, 1))
par(mfrow = c(1, 2))
p1
p2
p1 <- ggplot(data = df, aes(sex, Ra)) +
geom_violin() +
labs(title = "Forearm length",
y = "Forearm length, mm")
p2 <- ggplot(data = df, aes(sex, W)) +
geom_violin() +
labs(title = "Weight",
y = "Weight, g")
# One row, two columns
par(mfrow = c(1, 2))
p1
p2
# # Back to the original graphics device
# par(mfrow = c(1, 1))
library(gridExtra)
grid.arrange(p1, p2, nrow=1, ncol=2)
grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = df, aes(sex, Ra)) +
geom_violin() +
labs(title = "Forearm length",
y = "Forearm length, mm")
p2 <- ggplot(data = df, aes(sex, W)) +
geom_violin() +
labs(title = "Weight",
y = "Weight, g")
gridExtra::grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = df, aes(Year, Ra)) +
geom_violin() +
labs(title = "Forearm length",
y = "Ra, mm")
p2 <- ggplot(data = df, aes(Year, W)) +
geom_violin() +
labs(title = "Weight",
y = "W, g")
gridExtra::grid.arrange(p1, p2, nrow=1, ncol=2)
# t ~ Ra
p_Ra_day_4years <- ggplot(data = df, aes(x = day, y = Ra, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "Ra ~ DOY",
y = "Forearm length, mm")
# t ~ W
p_W_day_4years <- ggplot(data = df, aes(x = day, y = W, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "W ~ DOY",
y = "Weight, g")
gridExtra::grid.arrange(p_Ra_day_4years, p_W_day_4years, nrow=1, ncol=2)
rm(p_Ra_day_4years, p_W_day_4years)
# Drop 2014 due to the lack of successful nights
df <- df[df$Year != "2014", ]
# # Check for normality
# # if p value > 0.05 - accept Null Hypothesis, otherwise reject it
#
# # Assess normality for each year separately
# shapiro.test(df$Ra[df$Year == "2008"])
# shapiro.test(df$Ra[df$Year == "2011"])
# shapiro.test(df$Ra[df$Year == "2019"])
#
#
# shapiro.test(df$BCI[df$Year == "2008"])
# shapiro.test(df$BCI[df$Year == "2011"])
# shapiro.test(df$BCI[df$Year == "2019"])
# Bartlett test of homogeneity of variances
# If p > 0.05, accept Null Hypothesis (variance are homogeneous)
# Ra
barlett_Ra <- bartlett.test(Ra ~ Year, df)
# BCI
barlett_BCI <- bartlett.test(BCI ~ Year, df)
ggplot(data = df, aes(x = Ra)) +
geom_histogram() +
labs(title = paste0("Bartlett test of homogeneity of variances: p-value = ",
round(barlett_Ra$p.value, digits = 3)),
x = "Foreadrm length, mm",
y = "Frequency") +
facet_wrap(vars(Year))
ggplot(data = df, aes(x = BCI)) +
geom_histogram() +
labs(title = paste0("Bartlett test of homogeneity of variances: p-value = ",
round(barlett_BCI$p.value, digits = 3)),
x = "Body Condition Index",
y = "Frequency") +
facet_wrap(vars(Year))
gridExtra::grid.arrange(p_Ra_day_4years, p_W_day_4years, nrow=1, ncol=2)
# Drop 2014 due to the lack of successful nights
df <- df[df$Year != "2014", ]
# # Check for normality
# # if p value > 0.05 - accept Null Hypothesis, otherwise reject it
#
# # Assess normality for each year separately
# shapiro.test(df$Ra[df$Year == "2008"])
# shapiro.test(df$Ra[df$Year == "2011"])
# shapiro.test(df$Ra[df$Year == "2019"])
#
#
# shapiro.test(df$BCI[df$Year == "2008"])
# shapiro.test(df$BCI[df$Year == "2011"])
# shapiro.test(df$BCI[df$Year == "2019"])
# Bartlett test of homogeneity of variances
# If p > 0.05, accept Null Hypothesis (variance are homogeneous)
# Ra
barlett_Ra <- bartlett.test(Ra ~ Year, df)
# BCI
barlett_BCI <- bartlett.test(BCI ~ Year, df)
p1 <- ggplot(data = df, aes(x = Ra)) +
geom_histogram() +
labs(title = paste0("Bartlett test of homogeneity of variances: p-value = ",
round(barlett_Ra$p.value, digits = 3)),
x = "Foreadrm length, mm",
y = "Frequency") +
facet_wrap(vars(Year))
p2 <- ggplot(data = df, aes(x = BCI)) +
geom_histogram() +
labs(title = paste0("Bartlett test of homogeneity of variances: p-value = ",
round(barlett_BCI$p.value, digits = 3)),
x = "Body Condition Index",
y = "Frequency") +
facet_wrap(vars(Year))
gridExtra::grid.arrange(p1, p2, nrow=1, ncol=2)
# Drop 2014 due to the lack of successful nights
df <- df[df$Year != "2014", ]
# # Check for normality
# # if p value > 0.05 - accept Null Hypothesis, otherwise reject it
#
# # Assess normality for each year separately
# shapiro.test(df$Ra[df$Year == "2008"])
# shapiro.test(df$Ra[df$Year == "2011"])
# shapiro.test(df$Ra[df$Year == "2019"])
#
#
# shapiro.test(df$BCI[df$Year == "2008"])
# shapiro.test(df$BCI[df$Year == "2011"])
# shapiro.test(df$BCI[df$Year == "2019"])
# Bartlett test of homogeneity of variances
# If p > 0.05, accept Null Hypothesis (variance are homogeneous)
# Ra
barlett_Ra <- bartlett.test(Ra ~ Year, df)
# BCI
barlett_BCI <- bartlett.test(BCI ~ Year, df)
p1 <- ggplot(data = df, aes(x = Ra)) +
geom_histogram() +
labs(title = paste0("Bartlett test of homogeneity of variances: p-value = ",
round(barlett_Ra$p.value, digits = 3)),
x = "Foreadrm length, mm",
y = "Frequency") +
facet_wrap(vars(Year))
p2 <- ggplot(data = df, aes(x = BCI)) +
geom_histogram() +
labs(title = paste0("Bartlett test of homogeneity of variances: p-value = ",
round(barlett_BCI$p.value, digits = 3)),
x = "Body Condition Index",
y = "Frequency") +
facet_wrap(vars(Year))
gridExtra::grid.arrange(p1, p2, nrow=2, ncol=1)
# Compute the analysis of variance
res.aov.Ra <- aov(Ra ~ Year, data = df)
summary(res.aov.Ra)
# H0: All group means are equal
# HA: Not all group means are equal
# The F value column is the test statistic from the F test. This is the mean square of each independent variable divided by the mean square of the residuals. The larger the F value, the more likely it is that the variation caused by the independent variable is real and not due to chance.
# The Pr(>F) column is the p value of the F statistic. This shows how likely it is that the F value calculated from the test would have occurred if the null hypothesis of no difference among group means were true.
ggplot(df, aes(x = Year, y = Ra, colour = Year)) +
geom_boxplot() +
scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07")) +
annotate("text",        # type
x = 1, y = 49, # position
hjust = 0,     # alignment left
label = paste(paste0("F = ", round(summary(res.aov.Ra)[[1]][["F value"]][1], digits = 3)),
paste0("p = ", round(summary(res.aov.Ra)[[1]][["Pr(>F)"]][1], digits = 3)),
sep = "\n"),
family = "serif", fontface = "italic", size = 5) +
labs(title = "Differences in forearm length for Noctule bats,\nOne-way Analysis of Variance",
x = "", y = "Forearm length, mm",
colour = "") +
# scale_colour_discrete(labels = c("I. setosa", "I. versicolor", "I. virginica")) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
# match legend key to panel.background
legend.key       = element_blank(),
legend.text = element_text(face = "italic", size = 12),
legend.position = "bottom")
# Tukey Honest Significant Differences
TukeyHSD(res.aov.Ra, conf.level = .95)
# if adjusted p-value lesser than 0.05 - pair differs significantly
# Check ANOVA assumptions
# 1. Homogeneity of variances (The residuals versus fits plot)
plot(res.aov.Ra, 1)
# 2. Normality plot of residuals
plot(res.aov.Ra, 2)
# Alternatively - Shapiro-Wilk test for the residuals
# Extract the residuals
aov_residuals <- residuals(object = res.aov.Ra)
# Run Shapiro-Wilk test
shapiro.test(x = aov_residuals)
# Compute the analysis of variance
res.aov.Ra <- aov(Ra ~ Year, data = df)
summary(res.aov.Ra)
# H0: All group means are equal
# HA: Not all group means are equal
# The F value column is the test statistic from the F test. This is the mean square of each independent variable divided by the mean square of the residuals. The larger the F value, the more likely it is that the variation caused by the independent variable is real and not due to chance.
# The Pr(>F) column is the p value of the F statistic. This shows how likely it is that the F value calculated from the test would have occurred if the null hypothesis of no difference among group means were true.
ggplot(df, aes(x = Year, y = Ra, colour = Year)) +
geom_boxplot() +
scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07")) +
annotate("text",        # type
x = 1, y = 49, # position
hjust = 0,     # alignment left
label = paste(paste0("F = ", round(summary(res.aov.Ra)[[1]][["F value"]][1], digits = 3)),
paste0("p = ", round(summary(res.aov.Ra)[[1]][["Pr(>F)"]][1], digits = 3)),
sep = "\n"),
family = "serif", fontface = "italic", size = 5) +
labs(title = "Differences in forearm length for Noctule bats,\nOne-way Analysis of Variance",
x = "", y = "Forearm length, mm",
colour = "") +
# scale_colour_discrete(labels = c("I. setosa", "I. versicolor", "I. virginica")) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
# match legend key to panel.background
legend.key       = element_blank(),
legend.text = element_text(face = "italic", size = 12),
legend.position = "bottom")
# Tukey Honest Significant Differences
TukeyHSD(res.aov.Ra, conf.level = .95)
# if adjusted p-value lesser than 0.05 - pair differs significantly
# # Check ANOVA assumptions
# # 1. Homogeneity of variances (The residuals versus fits plot)
# plot(res.aov.Ra, 1)
# # 2. Normality plot of residuals
# plot(res.aov.Ra, 2)
gridExtra::grid.arrange(plot(res.aov.Ra, 1), plot(res.aov.Ra, 2), nrow=2, ncol=1)
# Alternatively - Shapiro-Wilk test for the residuals
# Extract the residuals
aov_residuals <- residuals(object = res.aov.Ra)
# Run Shapiro-Wilk test
shapiro.test(x = aov_residuals)
# Compute the analysis of variance
res.aov.Ra <- aov(Ra ~ Year, data = df)
summary(res.aov.Ra)
# H0: All group means are equal
# HA: Not all group means are equal
# The F value column is the test statistic from the F test. This is the mean square of each independent variable divided by the mean square of the residuals. The larger the F value, the more likely it is that the variation caused by the independent variable is real and not due to chance.
# The Pr(>F) column is the p value of the F statistic. This shows how likely it is that the F value calculated from the test would have occurred if the null hypothesis of no difference among group means were true.
ggplot(df, aes(x = Year, y = Ra, colour = Year)) +
geom_boxplot() +
scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07")) +
annotate("text",        # type
x = 1, y = 49, # position
hjust = 0,     # alignment left
label = paste(paste0("F = ", round(summary(res.aov.Ra)[[1]][["F value"]][1], digits = 3)),
paste0("p = ", round(summary(res.aov.Ra)[[1]][["Pr(>F)"]][1], digits = 3)),
sep = "\n"),
family = "serif", fontface = "italic", size = 5) +
labs(title = "Differences in forearm length for Noctule bats,\nOne-way Analysis of Variance",
x = "", y = "Forearm length, mm",
colour = "") +
# scale_colour_discrete(labels = c("I. setosa", "I. versicolor", "I. virginica")) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
# match legend key to panel.background
legend.key       = element_blank(),
legend.text = element_text(face = "italic", size = 12),
legend.position = "bottom")
# Tukey Honest Significant Differences
TukeyHSD(res.aov.Ra, conf.level = .95)
# if adjusted p-value lesser than 0.05 - pair differs significantly
par(mfrow=c(1,2))
# Check ANOVA assumptions
# 1. Homogeneity of variances (The residuals versus fits plot)
plot(res.aov.Ra, 1)
# 2. Normality plot of residuals
plot(res.aov.Ra, 2)
par(mfrow=c(1,1))
# Alternatively - Shapiro-Wilk test for the residuals
# Extract the residuals
aov_residuals <- residuals(object = res.aov.Ra)
# Run Shapiro-Wilk test
shapiro.test(x = aov_residuals)
# Compute the analysis of variance
res.aov.BCI <- aov(BCI ~ Year, data = df)
summary(res.aov.BCI)
# H0: All group means are equal
# HA: Not all group means are equal
# The F value column is the test statistic from the F test. This is the mean square of each independent variable divided by the mean square of the residuals. The larger the F value, the more likely it is that the variation caused by the independent variable is real and not due to chance.
# The Pr(>F) column is the p value of the F statistic. This shows how likely it is that the F value calculated from the test would have occurred if the null hypothesis of no difference among group means were true.
ggplot(df, aes(x = Year, y = BCI, colour = Year)) +
geom_boxplot() +
scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07")) +
# annotate("text",  x = 1, y = -0.4,
#          label = paste0("p = ", round(summary(res.aov.BCI)[[1]][["Pr(>F)"]][1], digits = 4)),
#          family = "serif", fontface = "italic", size = 5) +
annotate("text",        # type
x = 1, y = -0.4, # position
hjust = 0,     # alignment left
label = paste(paste0("F = ", round(summary(res.aov.BCI)[[1]][["F value"]][1], digits = 3)),
paste0("p = ", round(summary(res.aov.BCI)[[1]][["Pr(>F)"]][1], digits = 3)),
sep = "\n"),
family = "serif", fontface = "italic", size = 5) +
labs(title = "Differences in forearm length for Noctule bats,\nOne-way Analysis of Variance",
x = "", y = "Forearm length, mm",
colour = "") +
# scale_colour_discrete(labels = c("I. setosa", "I. versicolor", "I. virginica")) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
# match legend key to panel.background
legend.key       = element_blank(),
legend.text = element_text(face = "italic", size = 12),
legend.position = "bottom")
# Tukey Honest Significant Differences
TukeyHSD(res.aov.BCI, conf.level = .95)
# if adjusted p-value lesser than 0.05 - pair differs significantly
# Plotting ANOVA assumptions
par(mfrow=c(1,2))
# Check ANOVA assumptions
# 1. Homogeneity of variances (The residuals versus fits plot)
plot(res.aov.BCI, 1)
# 2. Normality plot of residuals
plot(res.aov.BCI, 2)
par(mfrow=c(1,1))
# Alternatively - Shapiro-Wilk test for the residuals
# ExtBCIct the residuals
aov_residuals <- residuals(object = res.aov.BCI)
# Run Shapiro-Wilk test
shapiro.test(x = aov_residuals)
kruskal.test(BCI ~ Year, data = df)
