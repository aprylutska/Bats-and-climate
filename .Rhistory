models_w_interaction_tl10[[1]],
models_wo_interaction_tl15[[1]],
models_w_interaction_tl15[[1]],
models_wo_interaction_tl20[[1]],
models_w_interaction_tl20[[1]],
models_wo_interaction_tl30[[1]],
models_w_interaction_tl30[[1]])
# Combine model names into a single vector
model.names_BMI <- c("mod_0_BMI",
# "mod_0_BMI_tl15",
# "mod_0_BMI_tl20",
# "mod_0_BMI_tl30",
models_wo_interaction_tl10[[2]],
models_w_interaction_tl10[[2]],
models_wo_interaction_tl15[[2]],
models_w_interaction_tl15[[2]],
models_wo_interaction_tl20[[2]],
models_w_interaction_tl20[[2]],
models_wo_interaction_tl30[[2]],
models_w_interaction_tl30[[2]])
# Remove temporary objects
rm(mod_0_Ra, Ra_null, mod_0_BMI, BMI_null,
df_Ra_tl10, df_Ra_tl15, df_Ra_tl20, df_Ra_tl30,
df_BMI_tl10, df_BMI_tl15, df_BMI_tl20, df_BMI_tl30,
models_wo_interaction_tl10, models_w_interaction_tl10,
models_wo_interaction_tl15, models_w_interaction_tl15,
models_wo_interaction_tl20, models_w_interaction_tl20,
models_wo_interaction_tl30, models_w_interaction_tl30)
# Free-up memory
gc()
library(AICcmodavg) # to compare models by AIC
model.ranking.Ra <- aictab(cand.set = models_list_Ra, modnames = model.names_Ra)
# View model ranged from the best (least deltaAIC) to the worst, only 20 best models
head(model.ranking.Ra, n = 20L)
# Custom function to check model fit and assumptions
source("./functions/check.my.model.R")
# The first model in each list is the Null one, so to find model's index, add 1
# to the number of day-back for the model without interaction, and 1+123 = 124
# for the models with interaction
check.my.model(models_list_Ra[[match("tl10_Tmean_37*Prcp_37", model.names_Ra)]])
model.ranking.BMI <- aictab(cand.set = models_list_BMI,
modnames = model.names_BMI)
# View model ranged from the best (least deltaAIC) to the worst, only 20 best models
head(model.ranking.BMI, n = 20L)
# The first model in each list is the Null one, so to find model's index, add 1
# to the number of day-back for the model without interaction, and 1+123 = 124
# for the models with interaction
check.my.model(models_list_BMI[[match("tl20_Tmean_73*Prcp_73", model.names_BMI)]])
library(lme4)
mod_mixed_0_Ra <- lmer(Ra ~ 1 + (1 | Year), data = df_retrospective_lag10d)
Ra_mixed_null <- list(mod_mixed_0_Ra)
# BMI
mod_mixed_0_BMI <- lmer(BMI ~ 1 + (1 | Year), data = df_retrospective_lag10d)
Ra_null <- list(mod_mixed_0_Ra)
# BMI
mod_mixed_0_BMI <- lmer(BMI ~ 1 + (1 | Year), data = df_retrospective_lag10d)
BMI_null <- list(mod_mixed_0_BMI)
# Call custom function to produce a series of candidate models (list) and their
# names (vector), combined in a single list of two.
source("./functions/bulk.model.fit.R")
# Call custom function to produce a series of candidate models (list) and their
# names (vector), combined in a single list of two.
source("./functions/bulk.model.fit.R")
## Ra
# Time lag 10 days
df_Ra_tl10 <- df_retrospective_lag10d[, c(7,       # column with the response var (Ra)
12:ncol(df_retrospective_lag10d))     # columns with independent variables
]
View(df_Ra_tl10)
View(df_retrospective_lag10d)
## Ra
# Time lag 10 days
df_Ra_tl10 <- df_retrospective_lag10d[, c(7,       # response var (Ra)
9,       # random effect var (Year)
12:ncol(df_retrospective_lag10d))     # independent variables
]
View(df_Ra_tl10)
models_wo_interaction_tl10 <- bulk.model.fit(data = df_Ra_tl10,
response_var = "Ra",
interaction = "+",
prefix = "tl10",
random = "Year")
# Call custom function to produce a series of candidate models (list) and their
# names (vector), combined in a single list of two.
source("./functions/bulk.model.fit.R")
models_wo_interaction_tl10 <- bulk.model.fit(data = df_Ra_tl10,
response_var = "Ra",
interaction = "+",
prefix = "tl10",
random = "Year")
# Call custom function to produce a series of candidate models (list) and their
# names (vector), combined in a single list of two.
source("./functions/bulk.model.fit.R")
models_wo_interaction_tl10 <- bulk.model.fit(data = df_Ra_tl10,
response_var = "Ra",
interaction = "+",
prefix = "tl10",
random = "Year")
models_wo_interaction_tl10[[1]]
library(lme4)
# Null models
## Ra
mod_mixed_0_Ra <- lmer(Ra ~ 1 + (1 | Year), data = df_retrospective_lag10d)
Ra_null <- list(mod_mixed_0_Ra)
## BMI
mod_mixed_0_BMI <- lmer(BMI ~ 1 + (1 | Year), data = df_retrospective_lag10d)
BMI_null <- list(mod_mixed_0_BMI)
# Mixed effect models
# Call custom function to produce a series of candidate models (list) and their
# names (vector), combined in a single list of two.
source("./functions/bulk.model.fit.R")
## Ra
# Time lag 10 days
df_Ra_tl10 <- df_retrospective_lag10d[, c(7,       # response var (Ra)
9,       # random effect var (Year)
12:ncol(df_retrospective_lag10d))     # independent variables
]
models_wo_interaction_tl10 <- bulk.model.fit(data = df_Ra_tl10,
response_var = "Ra",
interaction = "+",
prefix = "tl10",
random = "Year")
models_w_interaction_tl10 <- bulk.model.fit(data = df_Ra_tl10,
response_var = "Ra",
interaction = "*",
prefix = "tl10",
random = "Year")
# Time lag 15 days
df_Ra_tl15 <- df_retrospective_lag15d[, c(7,       # response var (Ra)
9,       # random effect var (Year)
12:ncol(df_retrospective_lag15d))     # independent variables
]
models_wo_interaction_tl15 <- bulk.model.fit(data = df_Ra_tl15,
response_var = "Ra",
interaction = "+",
prefix = "tl15",
random = "Year")
models_w_interaction_tl15 <- bulk.model.fit(data = df_Ra_tl15,
response_var = "Ra",
interaction = "*",
prefix = "tl15",
random = "Year")
# Time lag 20 days
df_Ra_tl20 <- df_retrospective_lag20d[, c(7,       # response var (Ra)
9,       # random effect var (Year)
12:ncol(df_retrospective_lag20d))     # independent variables
]
models_wo_interaction_tl20 <- bulk.model.fit(data = df_Ra_tl20,
response_var = "Ra",
interaction = "+",
prefix = "tl20",
random = "Year")
models_w_interaction_tl20 <- bulk.model.fit(data = df_Ra_tl20,
response_var = "Ra",
interaction = "*",
prefix = "tl20",
random = "Year")
# Time lag 30 days
df_Ra_tl30 <- df_retrospective_lag30d[, c(7,       # response var (Ra)
9,       # random effect var (Year)
12:ncol(df_retrospective_lag30d))     # independent variables
]
models_wo_interaction_tl30 <- bulk.model.fit(data = df_Ra_tl30,
response_var = "Ra",
interaction = "+",
prefix = "tl30",
random = "Year")
models_w_interaction_tl30 <- bulk.model.fit(data = df_Ra_tl30,
response_var = "Ra",
interaction = "*",
prefix = "tl30",
random = "Year")
# Combine models into a single list
models_list_Ra <- c(Ra_null,
models_wo_interaction_tl10[[1]],
models_w_interaction_tl10[[1]],
models_wo_interaction_tl15[[1]],
models_w_interaction_tl15[[1]],
models_wo_interaction_tl20[[1]],
models_w_interaction_tl20[[1]],
models_wo_interaction_tl30[[1]],
models_w_interaction_tl30[[1]])
# Combine model names into a single vector
model.names_Ra <- c("mod_0_Ra",
models_wo_interaction_tl10[[2]],
models_w_interaction_tl10[[2]],
models_wo_interaction_tl15[[2]],
models_w_interaction_tl15[[2]],
models_wo_interaction_tl20[[2]],
models_w_interaction_tl20[[2]],
models_wo_interaction_tl30[[2]],
models_w_interaction_tl30[[2]])
## BMI
# Time lag 10 days
df_BMI_tl10 <- df_retrospective_lag10d[, c(11,    # column with the response var (BMI)
12:ncol(df_retrospective_lag10d))    # columns with independent variables
]
models_wo_interaction_tl10 <- bulk.model.fit(data = df_BMI_tl10,
response_var = "BMI",
interaction = "+",
prefix = "tl10")
models_w_interaction_tl10 <- bulk.model.fit(data = df_BMI_tl10,
response_var = "BMI",
interaction = "*",
prefix = "tl10")
# Time lag 15 days
df_BMI_tl15 <- df_retrospective_lag15d[, c(11,    # column with the response var (BMI)
12:ncol(df_retrospective_lag15d))    # columns with independent variables
]
models_wo_interaction_tl15 <- bulk.model.fit(data = df_BMI_tl15,
response_var = "BMI",
interaction = "+",
prefix = "tl15")
models_w_interaction_tl15 <- bulk.model.fit(data = df_BMI_tl15,
response_var = "BMI",
interaction = "*",
prefix = "tl15")
# Time lag 20 days
df_BMI_tl20 <- df_retrospective_lag20d[, c(11,    # column with the response var (BMI)
12:ncol(df_retrospective_lag20d))    # columns with independent variables
]
models_wo_interaction_tl20 <- bulk.model.fit(data = df_BMI_tl20,
response_var = "BMI",
interaction = "+",
prefix = "tl20")
models_w_interaction_tl20 <- bulk.model.fit(data = df_BMI_tl20,
response_var = "BMI",
interaction = "*",
prefix = "tl20")
# Time lag 30 days
df_BMI_tl30 <- df_retrospective_lag30d[, c(11,   # column with the response var (BMI)
12:ncol(df_retrospective_lag30d))   # columns with independent variables
]
models_wo_interaction_tl30 <- bulk.model.fit(data = df_BMI_tl30,
response_var = "BMI",
interaction = "+",
prefix = "tl30")
models_w_interaction_tl30 <- bulk.model.fit(data = df_BMI_tl30,
response_var = "BMI",
interaction = "*",
prefix = "tl30")
# Combine models into a single list
models_list_BMI <- c(BMI_null,
models_wo_interaction_tl10[[1]],
models_w_interaction_tl10[[1]],
models_wo_interaction_tl15[[1]],
models_w_interaction_tl15[[1]],
models_wo_interaction_tl20[[1]],
models_w_interaction_tl20[[1]],
models_wo_interaction_tl30[[1]],
models_w_interaction_tl30[[1]])
# Combine model names into a single vector
model.names_BMI <- c("mod_0_BMI",
# "mod_0_BMI_tl15",
# "mod_0_BMI_tl20",
# "mod_0_BMI_tl30",
models_wo_interaction_tl10[[2]],
models_w_interaction_tl10[[2]],
models_wo_interaction_tl15[[2]],
models_w_interaction_tl15[[2]],
models_wo_interaction_tl20[[2]],
models_w_interaction_tl20[[2]],
models_wo_interaction_tl30[[2]],
models_w_interaction_tl30[[2]])
# Remove temporary objects
rm(mod_0_Ra, Ra_null, mod_0_BMI, BMI_null,
df_Ra_tl10, df_Ra_tl15, df_Ra_tl20, df_Ra_tl30,
df_BMI_tl10, df_BMI_tl15, df_BMI_tl20, df_BMI_tl30,
models_wo_interaction_tl10, models_w_interaction_tl10,
models_wo_interaction_tl15, models_w_interaction_tl15,
models_wo_interaction_tl20, models_w_interaction_tl20,
models_wo_interaction_tl30, models_w_interaction_tl30)
# Free-up memory
gc()
library(AICcmodavg) # to compare models by AIC
model.ranking.Ra <- aictab(cand.set = models_list_Ra,
modnames = model.names_Ra)
# View model ranged from the best (least deltaAIC) to the worst, only 20 best models
head(model.ranking.Ra, n = 20L)
# Custom function to check model fit and assumptions
source("./functions/check.my.model.R")
# The first model in each list is the Null one, so to find model's index, add 1
# to the number of day-back for the model without interaction, and 1+123 = 124
# for the models with interaction
check.my.model(models_list_Ra[[match("tl10_Tmean_90*Prcp_90_1|Year", model.names_Ra)]])
model <- models_list_Ra[[match("tl10_Tmean_90*Prcp_90_1|Year", model.names_Ra)]]
summary(model)
model_performance(model)
model <- models_list_Ra[[1]]
summary(model)
model_performance(model)
model <- models_list_Ra[[2]]
summary(model)
model_performance(model)
df_perf <- model_performance(model)
View(df_perf)
model$model %>%
pivot_longer(cols = 2:3,
names_to = "independent_var",
values_to = "value") %>%
separate(independent_var, into = 'predictor', extra = 'drop', remove = FALSE) %>%
rename("response_var" = 1) %>%
ggplot(aes(x = value, y = response_var, colour = predictor)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(predictor), scales = "free") +
labs(title = paste0("R2 conditional = ", round(model_performance(model)$R2_conditional, digits = 3),
", R2 marginal = ", round(model_performance(model)$R2_marginal, digits = 3)
))
model@resp
model@Gp
View(model)
model@frame
df <- model@frame
View(df)
model$frame %>%
pivot_longer(cols = 2:3,
names_to = "independent_var",
values_to = "value") %>%
separate(independent_var, into = 'predictor', extra = 'drop', remove = FALSE) %>%
rename("response_var" = 1)
model@frame %>%
pivot_longer(cols = 2:3,
names_to = "independent_var",
values_to = "value") %>%
separate(independent_var, into = 'predictor', extra = 'drop', remove = FALSE) %>%
rename("response_var" = 1)
model@frame %>%
pivot_longer(cols = 2:3,
names_to = "independent_var",
values_to = "value") %>%
separate(independent_var, into = 'predictor', extra = 'drop', remove = FALSE) %>%
rename("response_var" = 1) %>%
ggplot(aes(x = value, y = response_var, colour = predictor)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(predictor), scales = "free") +
labs(title = paste0("R2 conditional = ", round(model_performance(model)$R2_conditional, digits = 3),
", R2 marginal = ", round(model_performance(model)$R2_marginal, digits = 3)
))
plot(check_normality(model))
plot(check_heteroscedasticity(model))
# Custom function to check model fit and assumptions
source("./functions/check.my.model.R")
check.my.model(models_list_Ra[[match("tl10_Tmean_90*Prcp_90_1|Year", model.names_Ra)]])
check.my.model(models_list_Ra[[match("tl10_Tmean_90*Prcp_90_1|Year", model.names_Ra)]],
mixed = TRUE)
check.my.model(models_list_Ra[[match("tl15_Tmean_86*Prcp_86_1|Year", model.names_Ra)]],
mixed = TRUE)
models_list_Ra[[match("tl15_Tmean_86*Prcp_86_1|Year", model.names_Ra)]]
model_performance(models_list_Ra[[match("tl15_Tmean_86*Prcp_86_1|Year", model.names_Ra)]])
performance::r2_nakagawa(models_list_Ra[[match("tl15_Tmean_86*Prcp_86_1|Year", model.names_Ra)]], tolerance = 1e-1000)
model_performance(models_list_Ra[[match("tl15_Tmean_86*Prcp_86_1|Year", model.names_Ra)]])
nakag <- performance::r2_nakagawa(models_list_Ra[[match("tl15_Tmean_86*Prcp_86_1|Year", model.names_Ra)]], tolerance = 1e-1000)
nakag[1]
nakag[[1]]
nakag[[2]]
# Custom function to check model fit and assumptions
source("./functions/check.my.model.R")
check.my.model(models_list_Ra[[match("tl15_Tmean_86*Prcp_86_1|Year", model.names_Ra)]],
mixed = TRUE)
# Custom function to check model fit and assumptions
source("./functions/check.my.model.R")
check.my.model(models_list_Ra[[match("tl15_Tmean_86*Prcp_86_1|Year", model.names_Ra)]],
mixed = TRUE)
check.my.model(models_list_Ra[[match("tl10_Tmean_90*Prcp_90_1|Year", model.names_Ra)]],
mixed = TRUE)
?compare_performance
model.ranking.BMI <- aictab(cand.set = models_list_BMI,
modnames = model.names_BMI)
library(AICcmodavg) # to compare models by AIC
model.ranking.Ra <- aictab(cand.set = models_list_Ra,
modnames = model.names_Ra)
# View model ranged from the best (least deltaAIC) to the worst, only 20 best models
head(model.ranking.Ra, n = 20L)
model.ranking.BMI <- aictab(cand.set = models_list_BMI,
modnames = model.names_BMI)
## BMI
# Time lag 10 days
df_BMI_tl10 <- df_retrospective_lag10d[, c(11,    # response var (BMI)
9,     # random effect var (Year)
12:ncol(df_retrospective_lag10d))    # independent variables
]
## BMI
# Time lag 10 days
df_BMI_tl10 <- df_retrospective_lag10d[, c(11,    # response var (BMI)
9,     # random effect var (Year)
12:ncol(df_retrospective_lag10d))    # independent variables
]
models_wo_interaction_tl10 <- bulk.model.fit(data = df_BMI_tl10,
response_var = "BMI",
interaction = "+",
prefix = "tl10",
random = "Year")
models_w_interaction_tl10 <- bulk.model.fit(data = df_BMI_tl10,
response_var = "BMI",
interaction = "*",
prefix = "tl10",
random = "Year")
# Time lag 15 days
df_BMI_tl15 <- df_retrospective_lag15d[, c(11,    # response var (BMI)
9,     # random effect var (Year)
12:ncol(df_retrospective_lag15d))    # independent variables
]
models_wo_interaction_tl15 <- bulk.model.fit(data = df_BMI_tl15,
response_var = "BMI",
interaction = "+",
prefix = "tl15",
random = "Year")
models_wo_interaction_tl15 <- bulk.model.fit(data = df_BMI_tl15,
response_var = "BMI",
interaction = "+",
prefix = "tl15",
random = "Year")
models_w_interaction_tl15 <- bulk.model.fit(data = df_BMI_tl15,
response_var = "BMI",
interaction = "*",
prefix = "tl15",
random = "Year")
# Time lag 20 days
df_BMI_tl20 <- df_retrospective_lag20d[, c(11,    # response var (BMI)
9,     # random effect var (Year)
12:ncol(df_retrospective_lag20d))    # independent variables
]
models_wo_interaction_tl20 <- bulk.model.fit(data = df_BMI_tl20,
response_var = "BMI",
interaction = "+",
prefix = "tl20",
random = "Year")
models_wo_interaction_tl20 <- bulk.model.fit(data = df_BMI_tl20,
response_var = "BMI",
interaction = "+",
prefix = "tl20",
random = "Year")
models_w_interaction_tl20 <- bulk.model.fit(data = df_BMI_tl20,
response_var = "BMI",
interaction = "*",
prefix = "tl20",
random = "Year")
# Time lag 30 days
df_BMI_tl30 <- df_retrospective_lag30d[, c(11,    # response var (BMI)
9,     # random effect var (Year)
12:ncol(df_retrospective_lag30d))    # independent variables
]
models_wo_interaction_tl30 <- bulk.model.fit(data = df_BMI_tl30,
response_var = "BMI",
interaction = "+",
prefix = "tl30",
random = "Year")
models_wo_interaction_tl30 <- bulk.model.fit(data = df_BMI_tl30,
response_var = "BMI",
interaction = "+",
prefix = "tl30",
random = "Year")
models_w_interaction_tl30 <- bulk.model.fit(data = df_BMI_tl30,
response_var = "BMI",
interaction = "*",
prefix = "tl30",
random = "Year")
# Combine models into a single list
models_list_BMI <- c(BMI_null,
models_wo_interaction_tl10[[1]],
models_w_interaction_tl10[[1]],
models_wo_interaction_tl15[[1]],
models_w_interaction_tl15[[1]],
models_wo_interaction_tl20[[1]],
models_w_interaction_tl20[[1]],
models_wo_interaction_tl30[[1]],
models_w_interaction_tl30[[1]])
## BMI
mod_mixed_0_BMI <- lmer(BMI ~ 1 + (1 | Year), data = df_retrospective_lag10d)
BMI_null <- list(mod_mixed_0_BMI)
# Combine models into a single list
models_list_BMI <- c(BMI_null,
models_wo_interaction_tl10[[1]],
models_w_interaction_tl10[[1]],
models_wo_interaction_tl15[[1]],
models_w_interaction_tl15[[1]],
models_wo_interaction_tl20[[1]],
models_w_interaction_tl20[[1]],
models_wo_interaction_tl30[[1]],
models_w_interaction_tl30[[1]])
# Combine model names into a single vector
model.names_BMI <- c("mod_0_BMI",
models_wo_interaction_tl10[[2]],
models_w_interaction_tl10[[2]],
models_wo_interaction_tl15[[2]],
models_w_interaction_tl15[[2]],
models_wo_interaction_tl20[[2]],
models_w_interaction_tl20[[2]],
models_wo_interaction_tl30[[2]],
models_w_interaction_tl30[[2]])
# Remove temporary objects
rm(mod_0_Ra, Ra_null, mod_0_BMI, BMI_null,
df_Ra_tl10, df_Ra_tl15, df_Ra_tl20, df_Ra_tl30,
df_BMI_tl10, df_BMI_tl15, df_BMI_tl20, df_BMI_tl30,
models_wo_interaction_tl10, models_w_interaction_tl10,
models_wo_interaction_tl15, models_w_interaction_tl15,
models_wo_interaction_tl20, models_w_interaction_tl20,
models_wo_interaction_tl30, models_w_interaction_tl30)
# Free-up memory
gc()
model.ranking.BMI <- aictab(cand.set = models_list_BMI,
modnames = model.names_BMI)
# View model ranged from the best (least deltaAIC) to the worst, only 20 best models
head(model.ranking.BMI, n = 20L)
check.my.model(models_list_Ra[[match("tl10_Tmean_90*Prcp_90_1|Year", model.names_Ra)]],
mixed = TRUE)
check.my.model(models_list_BMI[[match("tl10_Tmean_20+Prcp_20_1|Year", model.names_BMI)]],
mixed = TRUE)
compare_performance(models_list_BMI)
compare_performance(models_list_BMI, rank = TRUE)
