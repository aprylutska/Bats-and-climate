df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
mutate(across(c(Territory, Place, Species, sex, age, Year),
as.factor)) %>%
select(-Data) %>%
filter(complete.cases(Ra, W))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
mutate(across(c(Territory, Place, Species, sex, age, Year),
as.factor)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Ra, W)) %>%
filter(Species == "Nyctalus noctula")
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
mutate(across(c(Territory, Place, Species, sex, age, Year),
as.factor)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad")
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
mutate(across(c(Territory, Place, Species, sex, age, Year),
as.factor)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
mutate(place_id = unite(Territory:Place, remove = FALSE))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
mutate(place_id = unite(Territory:Place, remove = FALSE)) %>%
mutate(across(c(Territory, Place, Species, sex, age, Year),
as.factor)) %>%
```
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
mutate(place_id = unite(Territory:Place, remove = FALSE))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
mutate(place_id = unite(Territory:Place, na.rm = TRUE, remove = FALSE))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad")
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Territory, Place, Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad")
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Territory, Place, Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
mutate(place_id = unite(Territory:Place, na.rm = TRUE, remove = FALSE))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Territory, Place, Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
mutate(place_id = unite(Territory:Place, remove = FALSE))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Territory, Place, Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
unite("place_id", Territory:Place, remove = FALSE)
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Territory, Place, Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, Species, sex, age, Year),
as.factor)) %>%
```
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(Territory, Place, Ra, W)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, Species, sex, age, Year),
as.factor))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, Species, sex, age, Year),
as.factor))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
filter(Place != "") %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, Species, sex, age, Year),
as.factor))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
# Drop empty strings (which are not NAs)
filter(Place != "") %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
select(-Species, -age) %>%
# Make a new variable with places' unique identifiers
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, Species, sex, age, Year),
as.factor))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
# Drop empty strings (which are not NAs)
filter(Place != "") %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
select(-Species, -age) %>%
# Make a new variable with places' unique identifiers
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, sex, Year),
as.factor))
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
# Drop empty strings (which are not NAs)
filter(Place != "") %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
select(-Species, -age) %>%
# Make a new variable with places' unique identifiers
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, sex, Year),
as.factor)) %>%
# count bats per day
count(date) %>%
# choose days where more than 10 bats
filter(n > 10) %>%
# subset with days where more than 10 bats
inner_join(.data, by = join_by(date)) %>%
select(-n)
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
# Drop empty strings (which are not NAs)
filter(Place != "") %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
select(-Species, -age) %>%
# Make a new variable with places' unique identifiers
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, sex, Year),
as.factor))
df <- df %>%
# count bats per day
count(date) %>%
# choose days where more than 10 bats
filter(n > 10) %>%
# subset with days where more than 10 bats
inner_join(df, by = join_by(date)) %>%
select(-n)
View(df)
df <- df %>%
# count bats per day
count(date) %>%
# choose days where more than 10 bats
filter(n > 10)
View(df)
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
# Drop empty strings (which are not NAs)
filter(Place != "") %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
select(-Species, -age) %>%
# Make a new variable with places' unique identifiers
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, sex, Year),
as.factor))
df <- df %>%
# count bats per day
count(date) %>%
# choose days where more than 10 bats
filter(n > 10)
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
# Drop empty strings (which are not NAs)
filter(Place != "") %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
select(-Species, -age) %>%
# Make a new variable with places' unique identifiers
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, sex, Year),
as.factor))
df <- df %>%
# count bats per day
count(date) %>%
# choose days where more than 10 bats
filter(n > 10) %>%
# subset with days where more than 10 bats
inner_join(df, by = join_by(date)) %>%
select(-n)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # reset R's brain
library(tidyverse) # for data manipulations
library(lubridate) # for transforming date variables
library(easyclimate) # for daily climate data extraction
library(sf) # for spatial operations
library(gridExtra) # for ggplot plates
# library(jtools)
# Set custom theme for ggplot2 plots
mytheme <- theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Set custom theme as a default for all ggplot below
theme_set(mytheme)
# if LC_TIME=uk_UA.UTF-8, your months will be in Ukrainian.
# To fix that, you need to re-map locate into US (will be back after restart R session)
# Set locale to get English months names
# Sys.setlocale("LC_TIME", "en_US.UTF-8") # for Linux
# Sys.setlocale("LC_TIME", "English") # for Windows
# Custom function to check dependency of selected growth metric on day across years
source("./functions/check_my_var.R")
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
# Drop empty strings (which are not NAs)
filter(Place != "") %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
select(-Species, -age) %>%
# Make a new variable with places' unique identifiers
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, sex, Year),
as.factor))
# Loaded packages with their versions
sessionInfo() # to check your locale
df <- df %>%
# count bats per day
count(date) %>%
# choose days where more than 10 bats
filter(n > 10) %>%
# subset with days where more than 10 bats
inner_join(df, by = join_by(date)) %>%
select(-n)
ggplot(data = df, aes(Ra, W
, colour = Year
)
) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", aes(fill = Year)) +
# geom_smooth(aes(fill = Year)) +
labs(x = "Forearm length, mm",
y = "Weight, g")
p1 <- ggplot(data = df, aes(sex, Ra)) +
geom_violin() +
labs(title = "Forearm length",
y = "Forearm length, mm")
p2 <- ggplot(data = df, aes(sex, W)) +
geom_violin() +
labs(title = "Weight",
y = "Weight, g")
gridExtra::grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = df, aes(Year, Ra)) +
geom_violin() +
labs(title = "Forearm length",
y = "Ra, mm")
p2 <- ggplot(data = df, aes(Year, W)) +
geom_violin() +
labs(title = "Weight",
y = "W, g")
gridExtra::grid.arrange(p1, p2, nrow=1, ncol=2)
# t ~ Ra
p_Ra_day_4years <- ggplot(data = df, aes(x = day, y = Ra, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "Ra ~ DOY",
x = "Day of the year",
y = "Forearm length, mm")
# t ~ W
p_W_day_4years <- ggplot(data = df, aes(x = day, y = W, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "W ~ DOY",
x = "Day of the year",
y = "Weight, g")
gridExtra::grid.arrange(p_Ra_day_4years, p_W_day_4years, nrow=1, ncol=2)
rm(p_Ra_day_4years, p_W_day_4years)
# t ~ Ra
p_Ra_day_4years <- ggplot(data = df, aes(x = day, y = Ra, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "Ra ~ DOY",
x = "Day of the year",
y = "Forearm length, mm")
# t ~ W
p_W_day_4years <- ggplot(data = df, aes(x = day, y = W, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "W ~ DOY",
x = "Day of the year",
y = "Weight, g")
gridExtra::grid.arrange(p_Ra_day_4years, p_W_day_4years, nrow=1, ncol=2)
rm(p_Ra_day_4years, p_W_day_4years)
check_my_var(df, "Ra", "day")
check_my_var(df, "W", "day")
ggplot(df, aes(day)) +
geom_histogram() +
labs(x = "Day of the year",
y = "Number of bats") +
facet_wrap(vars(Year))
# Fit simple linear model
mod <- lm(log(W) ~ log(day), data = df)
# Get residuals
df$BMI <- residuals(mod)
# Drop unused variables
rm(mod)
check_my_var(df, "BMI", "day")
ggplot(data = df, aes(Year, BMI)) +
geom_violin() +
labs(y = "Body Mass Index")
ggplot(data = df, aes(day, BMI, colour = Year)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(x = "Day of the year",
y = "Body Mass Index")
# facet_wrap(vars(sex))
# Take a look at the timespan
summary(df$date)
# # Create data frame with point coordinates
coords <- data.frame(
place = c("R1", "R2", "Fed1", "Fed2", "Fed3", "F1", "F2", "F3", "F4"),
lon = c(36.33329, 36.32946, 36.32732, 36.32863, 36.33436, 36.32396, 36.32319, 36.31990, 36.31909),
lat = c(49.62554, 49.62092, 49.62298, 49.61411, 49.60477, 49.61782, 49.61169, 49.60948, 49.60782)
)
View(coords)
View(df)
write.csv(coords, "coords.csv")
write.csv(coords, "coords.csv", row.names = FALSE)
coords <- coords %>%
mutate(Territory = "Homilsha")
View(df)
coords <- coords %>%
mutate(Territory = "Homilsha") %>%
arrange(Territory)
coords <- coords %>%
mutate(Territory = "Homilsha") %>%
relocate(Territory)
write.csv(coords, "coords.csv", row.names = FALSE)
coords %>%
mutate(Territory = "Homilsha") %>%
relocate(Territory) %>%
write.csv("coords.csv", row.names = FALSE)
