# geom_smooth(method = "lm") +
geom_smooth() +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = Ra)) +
geom_point() +
# geom_smooth(method = "lm") +
geom_smooth() +
facet_wrap(vars(month), scales = "free")
# W
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = W)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmin, y = W)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = W)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
# BMI
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = BMI)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmin, y = BMI)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = BMI)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # reset R's brain
library(tidyverse) # for data manipulations
library(lubridate) # for transforming date variables
library(easyclimate) # for daily climate data extraction
library(sf) # for spatial operations
library(gridExtra) # for ggplot plates
library(grid)
# library(AICcmodavg) # to compare models by AIC
# library(performance)
# library(jtools)
# Set custom theme for ggplot2 plots
mytheme <- theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Set custom theme as a default for all ggplot below
theme_set(mytheme)
# Set model and figure directories
modeldir <- "./models_200rep_23w_absW_nnoc/"
figuredir <- "./figures_200rep_23w_absW_nnoc/"
# Lower threshold for the number of bats captured in a night
threshold <- 1
# if LC_TIME=uk_UA.UTF-8, your months will be in Ukrainian.
# To fix that, you need to re-map locate into US (will be back after restart R session)
# Set locale to get English months names
# Sys.setlocale("LC_TIME", "en_US.UTF-8") # for Linux
# Sys.setlocale("LC_TIME", "English") # for Windows
# Custom function to check dependency of selected growth metric on day across years
source("./functions/check_my_var.R")
# Read data and prepare it for further analyses
df <- read.csv("./data/Inventory_all_years_2024-04-04_OP.csv") %>%
mutate(date = dmy(Data)) %>%
mutate(Year = year(date)) %>%
# day of the year (start from the 1st Jan of each year)
mutate(day = yday(date)) %>%
select(-Data) %>%
select(-ring) %>%
# Drop rows with NAs in W and Ra
filter(complete.cases(.)) %>%
# Drop empty strings (which are not NAs)
filter(Place != "") %>%
filter(Species == "Nyctalus noctula" &
age == "sad") %>%
select(-Species, -age) %>%
# Make a new variable with places' unique identifiers
unite("place_id", Territory:Place, remove = FALSE) %>%
mutate(across(c(place_id, Territory, Place, sex, Year),
as.factor))
# Loaded packages with their versions
sessionInfo() # to check your locale
df <- df %>%
# count bats per day
count(date) %>%
# choose days where more than 10 bats
filter(n >= threshold) %>%
# subset with days where more than 10 bats
inner_join(df, by = join_by(date)) %>%
filter(Territory != "Smolensk" &
Territory != "Bryansk") %>%
filter(Territory != "Chornobyl") %>%
# filter(Territory == "Homilsha") %>%
select(-n)
# Check how many bats we captured during the night
ggplot(df, aes(x = day, fill = Territory)) +
geom_histogram() +
labs(x = "Day of the year",
y = "Number of bats") +
facet_wrap(vars(Year))
# Ra
p_dist_Ra <- ggplot(df, aes(x = Ra)) +
geom_density(fill = "blue", alpha = .5) +
labs(title = "Shapiro-Wilk normality test",
subtitle = paste0("W = ", round(shapiro.test(df$Ra)$statistic,
digits = 2),
", p-value = ", round(shapiro.test(df$Ra)$p.value,
digits = 4)
)
)
# W
p_dist_W <- ggplot(df, aes(x = W)) +
geom_density(fill = "red", alpha = .5) +
labs(title = "Shapiro-Wilk normality test",
subtitle = paste0("W = ", round(shapiro.test(df$W)$statistic,
digits = 2),
", p-value = ", round(shapiro.test(df$W)$p.value,
digits = 4)
)
)
gridExtra::grid.arrange(p_dist_Ra, p_dist_W, nrow=1, ncol=2)
rm(p_dist_W, p_dist_Ra)
ggplot(data = df, aes(Ra, W
, colour = Year
)
) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", aes(fill = Year)) +
# geom_smooth(aes(fill = Year)) +
labs(x = "Forearm length (mm)",
y = "Weight (g)")
# Ra
shapiro.test(df$Ra)
ggplot(df, aes(x = Ra, colour = sex)) +
geom_density(aes(fill = sex), alpha = .5)
# Bartlett test of homogeneity of variances
bartlett.test(Ra ~ sex, df)
# If p > 0.05, accept Null Hypothesis (variance are homogeneous)
# Student's t-test. Test significance of differences in sepal.length between two iris species
Ra_t <- t.test(Ra ~ sex, df)
# p-value << 0.05 - reject Null Hypothesis
# Mann-Whitney (Wilcoxon) test
Ra_wilk <- wilcox.test(Ra ~ sex, data = df)
# W
shapiro.test(df$W)
ggplot(df, aes(x = W, colour = sex)) +
geom_density(aes(fill = sex), alpha = .5)
# Bartlett test of homogeneity of variances
bartlett.test(W ~ sex, df)
# If p > 0.05, accept Null Hypothesis (variance are homogeneous)
# Student's t-test. Test significance of differences in sepal.length between two iris species
W_t <- t.test(W ~ sex, df)
# p-value << 0.05 - reject Null Hypothesis
# Mann-Whitney (Wilcoxon) test
W_wilk <- wilcox.test(W ~ sex, data = df)
p1 <- ggplot(data = df, aes(sex, Ra)) +
geom_violin() +
labs(title = "Forearm length",
# # Wilcoxon rank sum test with continuity correction
# subtitle = paste0("W = ",  round(Ra_wilk$statistic, digits = 3),
#                   " p = ", round(Ra_wilk$p.value, digits = 3)),
# Welch Two Sample t-test
subtitle = paste0("t = ",  round(Ra_t$statistic, digits = 3),
" p = ", round(Ra_t$p.value, digits = 3)),
y = "Forearm length (mm)")
p2 <- ggplot(data = df, aes(sex, W)) +
geom_violin() +
labs(title = "Weight",
# # Wilcoxon rank sum test with continuity correction
# subtitle = paste0("W = ",  round(W_wilk$statistic, digits = 3),
#                   " p = ", round(W_wilk$p.value, digits = 3)),
# Welch Two Sample t-test
subtitle = paste0("t = ",  round(W_t$statistic, digits = 3),
" p = ", round(W_t$p.value, digits = 3)),
y = "Weight (g)")
gridExtra::grid.arrange(p1, p2, nrow=1, ncol=2)
rm(Ra_t, Ra_wilk, W_t, W_wilk)
p1 <- ggplot(data = df, aes(x = Year, y = Ra)) +
geom_violin(aes(colour = sex)) +
geom_boxplot(aes(fill = sex, colour = sex), alpha = 0.3, outliers = F) +
geom_point(aes(colour = sex), alpha = 0.5) +
labs(title = "a) Forearm length",
y = "Forearm length (mm)",
fill = NULL,
colour = NULL) +
theme(legend.position = c(.2, .1))
p2 <- ggplot(data = df, aes(x = Year, y = W)) +
geom_violin(aes(colour = sex)) +
geom_boxplot(aes(fill = sex, colour = sex), alpha = 0.3, outliers = F) +
geom_point(aes(colour = sex), alpha = 0.5) +
labs(title = "b) Weight",
y = "Weight (g)",
fill = NULL,
colour = NULL) +
theme(legend.position = c(.2, .1))
gridExtra::grid.arrange(p1, p2, nrow=1, ncol=2)
rm(p1, p2)
# t ~ Ra
p_Ra_day_4years <- ggplot(data = df, aes(x = day, y = Ra, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "Ra ~ DOY",
x = "Day of the year",
y = "Forearm length (mm)",
fill = NULL,
colour = NULL) +
theme(legend.position = "bottom")
# t ~ W
p_W_day_4years <- ggplot(data = df, aes(x = day, y = W, colour = Year)) +
geom_point() +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(title = "W ~ DOY",
x = "Day of the year",
y = "Weight (g)",
fill = NULL,
colour = NULL) +
theme(legend.position = "bottom")
gridExtra::grid.arrange(p_Ra_day_4years, p_W_day_4years, nrow=1, ncol=2)
rm(p_Ra_day_4years, p_W_day_4years)
# t ~ Ra
ggplot(data = df, aes(x = day, y = Ra, colour = sex)) +
geom_point(shape = 1) +
geom_smooth(method = "lm", aes(fill = sex)) +
labs(title = "Ra ~ DOY",
x = "Day of the year",
y = "Forearm length (mm)") +
facet_wrap(vars(Year), scales = "fixed")
# t ~ W
ggplot(data = df, aes(x = day, y = W, colour = sex)) +
geom_point(shape = 1) +
geom_smooth(method = "lm", aes(fill = sex)) +
labs(title = "W ~ DOY",
x = "Day of the year",
y = "Weight (g)") +
facet_wrap(vars(Year), scales = "fixed")
check_my_var(df, "Ra", "day", years = "Year")
check_my_var(df, "W", "day", "Year")
# Fit simple linear model (all years altogether)
mod <- lm(log(W) ~ log(day), data = df)
# Get residuals
df$BMI <- residuals(mod)
# Drop unused variables
rm(mod)
# # Fit simple linear models, but for each year separately, then merge the results
# # Prepare custom function for Body Mass Index calculation
# bmi_lm <- function(df){
#   lm(log(W) ~ log(day), data = df)
# }
#
# # Nest df by Year and fit separate linear models for each year
# df_nested <- df %>%
#   group_by(Year) %>%
#   nest() %>%
#   mutate(model = map(data, bmi_lm)) %>%
#   mutate(BMI = map(model, residuals))
#
# # Unnest data and merge original data with newly calculated residuals
# df_BMI <- df_nested %>%
#   unnest(BMI) %>%
#   select(-data, -model)
#
# df <- df_nested %>%
#   unnest(data) %>%
#   select(-model, -BMI) %>%
#   bind_cols(df_BMI) %>%
#   rename(Year = `Year...1`) %>%
#   select(-`Year...10`)
#
# rm(bmi_lm, df_nested, df_BMI)
check_my_var(df, "BMI", "day", "Year")
ggplot(data = df, aes(Year, BMI)) +
geom_violin(aes(colour = sex), alpha = 0.3) +
geom_boxplot(aes(fill = sex, colour = sex), alpha = 0.3, outliers = F) +
geom_point(aes(colour = sex), alpha = 0.5) +
labs(y = "Body Mass Index")
ggplot(data = df, aes(day, BMI, colour = Year)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", aes(fill = Year)) +
labs(x = "Day of the year",
y = "Body Mass Index")
# Take a look at the timespan
summary(df$date)
load(file = "./data/daily_weather_2007-2019.Rdata")
daily <- daily %>%
mutate(date = as.Date(date))
df <- df %>%
rownames_to_column(var = "bat_id")
daily %>%
mutate(month = lubridate::month(date)) %>%
mutate(Year = as.factor(lubridate::year(date))) %>%
group_by(place_id, Year, month) %>%
summarise(sum(Prcp), mean(Tmean), mean(Tmin)) %>%
rename(Prcp = 4, Tmean = 5, Tmin = 6) -> aggregated_clim
df %>%
select(Territory, place_id, Year, Ra, W, BMI) %>%
left_join(aggregated_clim) -> monthly_clim
rm(aggregated_clim)
# Ra
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = Ra)) +
geom_point() +
# geom_smooth(method = "lm") +
geom_smooth() +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmin, y = Ra)) +
geom_point() +
# geom_smooth(method = "lm") +
geom_smooth() +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = Ra)) +
geom_point() +
# geom_smooth(method = "lm") +
geom_smooth() +
facet_wrap(vars(month), scales = "free")
# W
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = W)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmin, y = W)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = W)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
# BMI
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = BMI)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmin, y = BMI)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = BMI)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
# BMI
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = BMI)) +
geom_point(shape = 1) +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmin, y = BMI)) +
geom_point(shape = 1) +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = BMI)) +
geom_point(shape = 1) +
geom_smooth(method = "lm") +
facet_wrap(vars(month), scales = "free")
# Ra
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm) +
facet_wrap(vars(month), scales = "free")
# Ra
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = loess) +
facet_wrap(vars(month), scales = "free")
# Ra
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = gam) +
facet_wrap(vars(month), scales = "free")
# Ra
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm) +
facet_wrap(vars(month), scales = "free")
# Ra
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm, se = TRUE) +
facet_wrap(vars(month), scales = "free")
# Ra
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm) +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmin, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm) +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm) +
facet_wrap(vars(month), scales = "free")
# Ra
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm, method.args = list(degree = 1)) +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmin, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm, method.args = list(degree = 1)) +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm, method.args = list(degree = 1)) +
facet_wrap(vars(month), scales = "free")
# Ra
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmean, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm) +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Tmin, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm) +
facet_wrap(vars(month), scales = "free")
monthly_clim %>%
filter(month %in% c(1:6)) %>%
ggplot(aes(x = Prcp, y = Ra)) +
geom_point(shape = 1) +
# geom_smooth(method = "lm") +
# geom_smooth() +
stat_smooth(method = glm) +
facet_wrap(vars(month), scales = "free")
